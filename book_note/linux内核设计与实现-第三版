第一章 Linux内核简介
1.3 操作系统内核简介
<1>操作系统是指在整个系统中负责完成最 基本功能和系统管理 的那些部分。这些部分应包括内核、设备驱动程序、启动引导程序、
      命令行Shell或者其他种类的用户界面、基本文件管理工具和系统工具。

<2>系统这个词包含了操作系统和所有运行在其上的应用程序。
	  
<3>用户界面是操作系统的外在表象，内核才是操作系统的内在核心。系统其他部分必须依靠内核这部分软件提供的服务，
像管理硬件设备、分配系统资源等。内核有时候被称为管理者或操作系统核心。
	通常一个内核由负责响应中断的中断服务程序；负责管理多个进程从而分享处理器时间的调度程序；
	负责管理进程地址空间的内存管理程序；网络、进程间通信等系统服务程序共同组成。
	  
<4>内核独立于普通应用程序，它一般处于系统态，拥有受保护的内存空间和访问硬件设备的所有权限。这种系统态和受保护的内存空间，统称为内核空间。

<5>应用程序在用户空间执行，它们只能看到允许它们使用的部分系统资源，并且只使用某些特定的系统功能，不能直接访问硬件，
	  也不能访问内核划分给别人的内存范围，还有其他一些使用限制。
	  
<6>当内核运行时，系统以内核态进入内核空间执行；执行普通程序时，系统以用户态进入用户空间执行。

<7>应用程序-->系统调用接口-->内核子系统-->设备驱动程序-->硬件
						  -->设备驱动程序             -->硬件
1)在系统中运行的应用程序通过系统调用来与内核通信。应用程序通常调用库函数，再由库函数通过系统调用界面，让内核代其完成各种不同任务。
   
2)当一个应用程序执行一条系统调用，称为 内核正在代其执行。
	应用程序被称为通过系统调用在内核空间运行；内核被称为运行于进程上下文中。
    应用程序通过系统调用界面陷入内核，是应用程序完成其工作的基本行为方式。
	
<8>内核还负责管理系统的硬件设备   //中断机制
	当硬件设备想要和系统通信时，它首先要发出一个异步的中断信号去打断处理器的执行，继而打断内核的执行。
	中断通常对应一个中断号，内核通过这个中断号查找相应的中断服务程序，并调用这个程序相应和处理中断。
	
<9>处理器在任何时间点上的活动必然为以下三者之一：
1)运行于用户空间，执行用户程序
2)运行于内核空间，处理进程上下文，代表某个特定的进程执行
3)运行于内核空间，处理中断上下文，与任何进程无关，处理某个特定的中断

//这些上下文代表着内核活动的范围。
当CPU空闲时，内核就运行一个空进程，处于进程上下文，但运行于内核空间。
	
1.4 Linux内核和传统Unix内核的比较
1、单内核与微内核设计之比较
<1>单内核
1)把内核从整体上作为一个独立的大过程来实现，同时也运行在一个单独的地址空间上。
这样的内核通常以单个静态二进制文件的形式存放于磁盘中，所有内核服务都在这样的一个大内核地址空间上运行。

2)简单、高性能，大多数Unix系统都设计为单模块。
	
<2>微内核
微内核的功能被划分为多个独立的过程，每个过程叫做一个服务器。
理想情况下，只有强烈请求特权服务的服务器才运行在特权模式下，其他服务器都运行在用户空间。不过，所有服务器都保持独立并运行在各自地址空间上。

1)不能像单模块那样直接调用函数，而是通过消息传递处理微内核通信，(IPC 进程间通信机制)
2)IPC机制开销大于函数调用;同时涉及内核空间和用户空间的上下文切换。
3)结果，所有实际基于微内核的系统都让大部分或全部服务器位于内核，这样虽可以直接调用函数、消除频繁切换上下文的弊端；
	但违反了微内核设计的初衷。
	
2、linux是一个单内核，也就是说，linux内核运行在单独的内核地址空间上。

3、Linux内核与传统Unix系统之间的差异：
<1>Linux支持动态加载/卸载内核模块。
<2>Linux支持对称多处理(SMP)机制。
<3>Linux内核可以抢占。
<4>Linux对线程支持的实现：内核并不区分线程和其他的一般进程。
<5>Linux提供具有设备类的面向对象的设备模型、热插拔时间。
<6>忽略了一些不好的Unix特性
<7>自由

1.5 Linux内核版本
<1>linux内核分为：稳定和处于开发中 两种。稳定内核具有工业级强度。
<2>linux通过一个简单的命名机制来区分稳定的和处于开发的内核。
2.6.26.1 //主版本号.副版本号.修订版本号.稳定版本号(可选)
1)从副版本号就可以反映出该内核是一个稳定版本还是一个处于开发中的版本：偶数表示稳定版本，奇数表示开发版本。
2)主版本号和副版本号 一起描述了 内核系列。2.6版内核系列

第二章 从内核出发
2.3 编译内核
一、内核配置
1、
<1>make config  //字符界面下的命令行工具
该工具会逐一遍历所有配置项，要求用户选择yes、no或者module。

<2>make menuconfig //基于ncurse库编制的图形界面工具

<3>make gconfig  //基于gtk+的图形工具

<4>make defconfig //基于默认的配置为你的体系结构创建一个配置

执行上述任意一条命令后会生成.config文件保存配置项结果，可以直接修改它。




2.4 内核开发的特点
<1>内核编程时既不能访问C库也不能访问标准C头文件
<2>内核编程时必须使用GNU C
<3>内核编程时缺乏像用户空间那样的内存保护机制
<4>内核编程时难以执行浮点运算
<5>内核给每个进程只有一个很小的定长堆栈
<6>由于内核支持异步中断、抢占和SMP，因此必须时刻注意同步和并发
<7>要考虑可移植性的重要性


	
	
	
	
	
	
	
	
	
	
	












