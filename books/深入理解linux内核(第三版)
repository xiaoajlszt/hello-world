1.5 Unix文件系统概述
一、Unix的每个进程都有一个当前工作目录，它属于进程执行上下文，标识出进程所用的当前目录。

二、硬链接和软链接
1、硬链接：
包含在目录中的文件名就是一个文件的硬链接，或简称链接。在同一目录或不同目录中，同一文件可以有几个链接，因此对应几个文件名。
<1>ln P1 P2 //创建一个新的硬链接，由路径名P1标识的文件创建一个路径名为P2的硬链接。
<2>限制：
- 不允许给目录创建硬链接。因为这可能把目录数变为环形图，从而就不可能通过名字定位一个文件；
- 只有在同一个文件系统中的文件之间才能创建链接。
Unix系统可能包含了多种文件系统，这些文件系统位于不同的磁盘或分区，用户也许无法知道它们之间的物理划分。

2、软链接(符号链接)
符号链接是短文件，这些文件包含有另一个文件的任意一个路径名。
路径可以指向位于任意一个文件系统的任意文件或目录，甚至可以指向一个不存在的文件。
<1>ln -s P1 P2  //创建一个路径名为P2的软链接，P2指向路径名P1。
当这个命令执行时，文件系统抽出P2的目录部分，并在那个目录下创建一个名为P2的符号链接类型的新项。
这个新文件包含路径名P1。这样，任何对P2的引用都可以被自动转成指向P1的一个引用。

3、保存在磁盘分区中的文件不管是什么类型都会给它分配一个称为索引节点的编号。
<1>硬链接就是多个文件名指向同一个索引节点，允许一个文件拥有多个有效的路径名。这样用户就可以建立硬链接到重要文件，防止误删等。
<2>只删除一个链接不会影响索引节点和其他链接，只有当最后一个链接被删除后，索引节点才会被删除。
<3>软链接类似与windows的快捷方式，它实际上是一个特殊的文本文件，其中包含另一个文件的位置信息。
删除原文件，会导致软链接失效。

4、ls -li   //-i显示文件的inode节点信息
35625 -rw-r--r--. 2 root root 0 11月  6 10:27 f1
35625 -rw-r--r--. 2 root root 0 11月  6 10:27 f2
13923544 lrwxrwxrwx. 1 root root 2 11月  6 10:27 f3 -> f1

可见，硬链接文件f2与目标文件f1的索引节点相同，软链接文件f3与目标文件的索引节点不相同。

三、文件描述符与索引节点
1、Unix对文件的内容和描述文件的信息给出了清楚的区分。除了设备文件和特殊文件系统文件外，每个文件都由字符序列组成。
<1>文件内容不包含任何控制信息，如文件长度或文件结束符等。
<2>文件系统处理文件需要的所有信息包含在一个名为索引节点(inode)的数据结构中。
每个文件都有自己的索引节点，文件系统用索引节点来标识文件。

2、索引节点提供如下属性：
- 文件类型
- 与文件相关的硬链接个数
- 以字节为单位的文件长度
- 设备标识符(即包含文件的设备的标识符)
- 在文件系统中标识文件的索引节点号
- 文件拥有者的UID
- 文件的用户组ID
- 几个时间戳(索引状态改变的时间、最后访问时间、最后修改时间)
- 访问权限和文件模式

四、访问权限和文件模式
1、用三种附加的标记：suid、sgid、sticky 来定义文件的模式。  

2、当文件由一个进程创建时，文件拥有者的ID就是该进程的UID；其用户组ID可以是进程创建者的ID，也可以是父母了的ID，取决于sgid标志位的值。

五、文件操作的系统调用


1.6 Unix内核概述



第12章 虚拟文件系统
1、虚拟文件系统所隐含的思想：
是把表示很多不同种类文件系统的共同信息放入内核；其中有一个字段或函数来支持Linux所支持的所有实际文件系统所提供的任何操作。
对所调用的每个读、写或其他函数，内核都能把它们替换成本地Linux文件系统、NTFS文件系统，或者文件所在的任何其他文件系统的实际函数。

2、几乎所有的Linux系统都使用了Ext2(第二扩展文件系统)。

12.1 虚拟文件系统的作用
1、虚拟文件系统也称为虚拟文件交换，是一个内核软件层，用来处理与Unix标准文件系统相关的所有系统调用。
其健壮性表现在能为各种文件系统提供一个通用的接口。
<1>VFS是用户的应用程序与文件系统实现之间的抽象层。
eg：cp /floppy/test /tmp/test  用户应用程序cp直接与VFS交互，不需要知道操作的文件系统类型。

2、VFS支持的文件系统可以划分为三种主要类型：
<1>磁盘文件系统
	这些文件系统管理在本地磁盘分区中可用的存储空间或者其他可以起到磁盘作用的设备。
<2>网络文件系统
	这些文件系统允许轻易地访问属于其他网络计算机的文件系统所包含的文件。
<3>特殊文件系统
	这些文件系统不管理本地或者远程磁盘空间。/proc文件系统是特殊文件系统的一个典型范例。

3、Unix的目录建立了一颗根目录为"/"的树，根目录包含在根文件系统中。其他所有的文件系统都被安装在跟文件系统的子目录中。
在Linux中这个根文件系统通常就是Ext2或Ext3类型。

12.2 通用文件模型(common file model)
1、VFS所隐含的主要思想在于引入了一个通用文件模型，这个模型能够表示所有支持的文件系统。
要实现每个具体的文件系统，必须将其物理组织结构转换为虚拟文件系统的通用文件模型。

2、通用文件模型由下列对象类型组成：
<1>超级块对象 superblock object
存放已安装文件系统的有关信息。对于基于磁盘的文件系统，这类对象通常对应于存放在磁盘上的文件系统控制块(filesystem control block)。
<2>索引节点对象 inode object
存放关于具体文件的一般信息。对于基于磁盘的文件系统，这类对象通常对应于存放在磁盘上的文件控制块(file control block)。
每个索引节点对象都有一个索引节点号，这个节点号唯一标识文件系统中的文件。
<3>文件对象 file object
存放打开文件与进程之间进行交互的有关信息。这类信息仅当进程访问文件期间存在于内核内存中。
<4>目录项对象 dentry object
存放目录项(也就是文件的特定名称)与对应文件进行链接的有关信息。
每个磁盘文件系统都已自己特有的方式将该类信息存在磁盘上。





































