一、变量、类型和保留字
1、Go同其他语言不同的地方在于变量的类型在变量名的后面。不是：int a，而是a int。当定义了一个变量，它默认赋值为其类型的null值。
   这意味着，在var a int后，a 的值为0。而var s string，意味着s 被赋值为零长度字符串，也就是""。
   
2、sl := make([]int, 10)
   var s = make([]int, 6)
   
   var arr [10]int
   a := [...]int{1, 2, 3}
   
二、延迟函数
1、在defer后指定的函数会在函数退出前调用；（在return之后）
   eg：func f() (ret int) {   //ret 初始化为零
        defer func() {
            ret++   //ret 增加为1
         }()
         return 0   //返回的是1 而不是0！
      }
	  
	  defer func() {
		/* ... */
	  }()   //() 在这里是必须的
	  
	  defer func(x int) {
	   /* ... */
	  }(5)  //为输入参数x 赋值5

2、可以将多个函数放入“延迟列表”中，延迟的函数是按照后进先出（LIFO）的顺序执行。

三、变参
1、arg ... int 告诉Go 这个函数接受不定数量的参数，这些参数的类型全部是int，在函数体中，变量arg是一个int类型的slice；
   func myfunc(arg ...int) {}

四、函数作为值
1、a := func() {   定义一个匿名函数，并且赋值给a
      println("Hello")
   }   //这里没有()
   a() //调用函数
如果使用fmt.Printf("\%T\n", a) 打印a 的类型，输出结果是func()。
2、函数作为值，也会被用在其他一些地方，例如map；
3、也可以编写一个接受函数作为参数的函数

五、恐慌（Panic）和恢复（Recover）

六