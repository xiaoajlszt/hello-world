主键或唯一索引区分了记录的唯一性：
http://www.2cto.com/database/201308/234179.html

一、使用ignore关键字   //避免重复插入记录
insert ignore into table1(email,phone,user_id) values('test9@163.com','99999','9999');
insert ignore into table1 select * from table2;

二、使用replace into
1、语法
replace into table_name(col_name, ...) values(...) 
replace into table_name(col_name, ...) select ... 
replace into table_name set col_name=value, ...

2、返回值：
REPLACE语句会返回一个数，来指示受影响的行的数目。该数是被删除和被插入的行数的和。
受影响的行数可以容易地确定是否REPLACE只添加了一行，或者是否REPLACE也替换了其它行：检查该数是否为1（添加）或更大（替换）。

3、eg：
replace into table_name(email,phone,user_id) values('test569','99999','123');

在 SQL Server 中可以这样处理：
if not exists (select phone from t where phone= '1') 
    insert into t(phone, update_time) values('1', getdate()) 
else
    update t set update_time = getdate() where phone= '1'
 
2、说明
REPLACE的运行与INSERT很相像,但是如果旧记录与新记录有相同的值，则在新记录被插入之前，旧记录被删除，即：
<1>尝试把新行插入到表中 
<2>当因为对于主键或唯一关键字出现重复关键字错误而造成插入失败时：
从表中删除含有重复关键字值的冲突行,再次尝试把新行插入到表中。
 
旧记录与新记录有相同的值的判断标准就是：表有一个PRIMARY KEY或UNIQUE索引；否则，使用一个REPLACE语句没有意义，该语句就会与INSERT相同。

三、ON DUPLICATE KEY UPDATE
向数据库中插入一条记录，若该数据的 主键值 或者 唯一索引 已经存在，则执行更新操作，否则插入一条新的记录。
INSERT INTO `view`(account_id,shop_number,number,name) VALUES(1,'allen',2,'hello world') ON DUPLICATE KEY UPDATE name='hello world',state=0;

四、自增主键跳号
INSERT时，数据库是先自增 自增主键，然后再插入数据。如果遇到唯一索引冲突，会导致插入失败，此时自增主键会出现跳号。如果请求失败，尝试3次，就会跳3个号。