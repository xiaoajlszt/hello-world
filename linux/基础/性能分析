一、top  http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316399.html
top命令是linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于windows的任务管理器。

1、参数含义：
统计信息区前五行是系统整体统计信息。
top - 16:12:36 up  6:08, 13 users,  load average: 42.08, 42.86, 42.78
Tasks: 413 total,   5 running, 408 sleeping,   0 stopped,   0 zombie
%Cpu(s): 10.4 us, 75.5 sy,  0.0 ni,  8.0 id,  0.0 wa,  0.0 hi,  0.5 si,  5.6 st
KiB Mem : 16432632 total,  4375640 free,  6286092 used,  5770900 buff/cache
KiB Swap: 23101428 total, 23101428 free,        0 used.  8214536 avail Mem 

<1>第一行是任务队列信息，同uptime命令的执行结果。
[root@opencos home]# uptime
 16:16:19 up  6:12, 13 users,  load average: 41.29, 41.99, 42.47
 
其中：
16:12:36 //当前时间
up  6:08 //系统运行时间，格式 小时：分钟
13 users //13个登陆终端
load average: 41.29, 41.99, 42.47 //系统负载，即任务队列的平均长度。三个值分别为 1分钟、5分钟、15分钟前到现在的平均值

<2>第二行、第三行是进程和CPU信息。当有多个CPU时，可能会超过两行。
413 total  //进程总数
5 running  //正在运行的进程数
408 sleeping //睡眠的进程数
0 stopped  //停止的进程数
0 zombie   //僵死进程数

10.4 us   //用户空间占用CPU百分比
75.5 sy   //内核空间占用CPU百分比
0.0 ni    //用户进程空间内改变过优先级的进程占用CPU百分比
8.0 id    //空闲CPU百分比
0.0 wa    //等待输入输出的CPU时间百分比
0.0 hi    //硬件CPU中断占用百分比
0.5 si    //软中断占用百分比
5.6 st    //虚拟机占用百分比

<3>最后两行为内存信息：单位KB
MEM:
16432632 total  //物理内存总量
4375640 free    //空闲内存总量
6286092 used    //使用的物理内存总量
5770900 buff/cache  //用作缓存的内存量

SWAP:
23101428 total  //交换区总量
23101428 free   //空闲交换区总量
0 used          //使用的交换区总量
8214536 avail Mem  //缓冲的交换区总量,内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小,相应的内存再次被换出时可不必再对交换区写入。

2、进程信息区统计信息区域下方显示了各个进程的详细信息。
序号  列名    含义
a    PID     进程id
b    PPID    父进程id
c    RUSER   Real user name
d    UID     进程所有者的用户id
e    USER    进程所有者的用户名
f    GROUP   进程所有者的组名
g    TTY     启动进程的终端名。不是从终端启动的进程则显示为 ?
h    PR      优先级
i    NI      nice值。负值表示高优先级，正值表示低优先级
j    P       最后使用的CPU，仅在多CPU环境下有意义
k    %CPU    上次更新到现在的CPU时间占用百分比
l    TIME    进程使用的CPU时间总计，单位秒
m    TIME+   进程使用的CPU时间总计，单位1/100秒
n    %MEM    进程使用的物理内存百分比
o    VIRT    进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES
p    SWAP    进程使用的虚拟内存中，被换出的大小，单位kb。
q    RES     进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA
r    CODE    可执行代码占用的物理内存大小，单位kb
s    DATA    可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb
t    SHR     共享内存大小，单位kb
u    nFLT    页面错误次数
v    nDRT    最后一次写入到现在，被修改过的页面数。
w    S       进程状态(D=不可中断的睡眠状态,R=运行,S=睡眠,T=跟踪/停止,Z=僵尸进程)
x    COMMAND 命令名/命令行
y    WCHAN   若该进程在睡眠，则显示睡眠中的系统函数名
z    Flags   任务标志，参考 sched.h

默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。可以通过下面的快捷键来更改显示内容。

可以通过下面的快捷键来更改显示内容：
f：选择显示的内容，按f后会显示列的列表。
o：改变列的显示顺序。

3、命令使用
top [-] [d] [p] [q] [c] [C] [S] [s]  [n]

参数说明：

d 指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。 
p 通过指定监控进程ID来仅仅监控某个进程的状态。 
q 该选项将使top没有任何延迟的进行刷新。如果调用程序有超级用户权限，那么top将以尽可能高的优先级运行。 
S 指定累计模式 
s 使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。 
i 使top不显示任何闲置或者僵死进程。 
c 显示整个命令行而不只是显示命令名 

4、常用
top   //每隔5秒显式所有进程的资源占用情况
top -d 2  //每隔2秒显式所有进程的资源占用情况
top -c  //每隔5秒显式进程的资源占用情况，并显示进程的命令行参数(默认只有进程名)
top -p 12345 -p 6789//每隔5秒显示pid是12345和pid是6789的两个进程的资源占用情况
top -d 2 -c -p 123456 //每隔2秒显示pid是12345的进程的资源使用情况，并显式该进程启动的命令行参数

5、其他
输入大写P，则结果按CPU占用降序排序。输入大写M，结果按内存占用降序排序。


二、pidstat  http://blog.csdn.net/xluren/article/details/41312657
			 http://blog.csdn.net/xluren/article/details/41312657
pidstat用于监控全部和指定进程占用资源的情况，如CPU、内存、设备I/O、任务切换、线程等。
pidstat首次运行时显示自系统启动开始的各项统计信息，之后运行将显示自上次运行该命令以后的统计信息。
用户可以通过指定统计的次数和时间来获得所需的统计信息。

[root@opencos ~]# pidstat  //默认输出系统启动后所有活动进程的cpu统计信息：
Linux 3.10.0-327.36.3.el7.x86_64 (opencos)      12/23/2016      _x86_64_        (8 CPU)

05:07:26 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
05:07:26 PM     0         1    0.01    0.01    0.00    0.02     5  systemd
05:07:26 PM     0         2    0.00    0.00    0.00    0.00     4  kthreadd
05:07:26 PM     0         3    0.00    0.00    0.00    0.00     0  ksoftirqd/0
05:07:26 PM     0         7    0.00    0.00    0.00    0.00     0  migration/0
05:07:26 PM     0        17    0.00    0.29    0.00    0.29     5  rcu_sched
05:07:26 PM     0        18    0.00    0.03    0.00    0.03     5  rcuos/0
05:07:26 PM     0        19    0.00    0.02    0.00    0.02     5  rcuos/1
05:07:26 PM     0        20    0.00    0.02    0.00    0.02     5  rcuos/2
05:07:26 PM     0        21    0.00    0.04    0.00    0.04     3  rcuos/3

1、指定采样周期和采样次数
pidstat 2 10 //以2秒为采样周期，输出10次cpu使用统计信息。

%usr：该任务在用户层的cpu使用率，和 nice 优先级无关。注意这个字段计算的cpu时间不包括在虚拟处理器中花去的时间。
%system：该任务在系统层的cpu使用率。
%guest：该任务花费在虚拟机上的cpu使用率（运行在虚拟处理器）。
%CPU：该任务总的cpu使用率。在SMP环境(多处理器)中，如果在命令行中输入-I参数的话，cpu使用率会除以你的cpu数量。
CPU：运行该任务的处理器编号。
Command：该任务的命令名称。































