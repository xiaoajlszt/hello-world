1、chattr和lsattr
<1>引入   
   如果你发现root用户都不能修改某个文件，大部分原因是使用chattr命令锁定该文件了。
   chattr用于改变文件/目录的属性，lsattr用于查看文件/目录的属性。通过chattr修改属性能够提高系统的安全性。
   chmod知识改变文件的rwx权限，chattr可以控制更底层的属性。

<2>用法
   chattr [ -RVf ] [ -v version ] [ mode ] files...
   
mode：
+ ：在原有参数设定基础上，追加参数。
- ：在原有参数设定基础上，移除参数。
= ：更新为指定参数设定。
A：文件或目录的 atime (access time)不可被修改(modified), 可以有效预防例如手提电脑磁盘I/O错误的发生。
S：硬盘I/O同步选项，功能类似sync。
a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。
c：即compresse，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。
d：即no dump，设定文件不能成为dump程序的备份目标。
i：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。
j：即journal，设定此参数使得当通过mount参数：data=ordered 或者 data=writeback 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。
s：保密性地删除文件或目录，即硬盘空间被全部收回。
u：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。

常用到的是a和i：
a选项强制只可添加不可删除，多用于日志系统的安全设定。
而i是更为严格的安全设定，只有superuser (root) 或具有CAP_LINUX_IMMUTABLE处理能力（标识）的进程能够施加该选项。

3、关闭告警声
<1>关掉:  rmmod pcspkr
<2>重新打开:  modprobe pcspkr

4、sh -c 'useradd rcp-jenkins -u 1004 -s /bin/bash;su rcp-jenkins -c '\''./runmake v4 release noclean'\'''
   sh "docker run --rm ${volume} ${DOCKER_IMAGE} sh -c \"${docker_cmd}\""
<1>sh 
-c string : -c表示命令需要从string中获取。string后面的参数会作为命令的参数。 

<2>useradd
-u：指定用户的UID(一组数字)
-s：指定用户的登录shell
-c：指定一段注释性描述

eg: 
useradd test123 -u 10000

test123:x:10000:10000::/home/test123:/bin/bash

<3>su
-c command：变更账号，并执行command指令后再变回原来的使用者。

5、man
<1>查看命令用法  man command
<2>查看内核函数用法  man getlocaltime
<3>查看内核头文件	
man time.h 		 对应time.h		(在默认路径/usr/include/中)
man sys_time.h   对应sys/time.h (在默认路径/usr/include/中)

6、dmidecode查看硬件信息
http://man.linuxde.net/dmidecode

7、svn使用
<1>安装websvn-2.3.3-13.el7.noarch  //noarch是no architecture的缩写，说明这个包可以在各个不同的cpu(X64\X86等)上使用。
<2>语法
http://blog.csdn.net/ithomer/article/details/6187464

8、mkdir 
-p, --parents
    no error if existing, make parent directories as needed
	
9、kill [参数][进程号]
https://www.cnblogs.com/peida/archive/2012/12/20/2825837.html

<1> 说明
Linux中的kill命令用来终止指定的进程（terminate a process）的运行，是Linux下进程管理的常用命令。
通常，终止一个前台进程可以使用Ctrl+C键，但是，对于一个后台进程就须用kill命令来终止，我们就需要先使用ps/pidof/pstree/top等工具获取进程PID，然后使用kill命令来杀掉该进程。
kill命令是通过向进程发送指定的信号来结束相应进程的。在默认情况下，采用编号为15的TERM信号。TERM信号将终止所有不能捕获该信号的进程。
对于那些可以捕获该信号的进程就要用编号为9的kill信号，强行“杀掉”该进程。 

<2> 参数
-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称
-a  当处理当前进程时，不限制命令名和进程号的对应关系
-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号
-s  指定发送信号
-u  指定用户 

<3>注意：
1)kill命令可以带信号号码选项，也可以不带。如果没有信号号码，kill命令就会发出终止信号(15)，这个信号可以被进程捕获，使得进程在退出之前可以清理并释放资源。
也可以用kill向进程发送特定的信号。例如：kill -2 123
//它的效果等同于在前台运行PID为123的进程时按下Ctrl+C键。但是，普通用户只能使用不带signal参数的kill命令或最多使用-9信号。

2)kill可以带有进程ID号作为参数。当用kill向这些进程发送信号时，必须是这些进程的主人。如果试图撤销一个没有权限撤销的进程或撤销一个不存在的进程，就会得到一个错误信息。

3)可以向多个进程发信号或终止它们。

4)当kill成功地发送了信号后，shell会在屏幕上显示出进程的终止信息。有时这个信息不会马上显示，只有当按下Enter键使shell的命令提示符再次出现时，才会显示出来。

5)应注意，信号使进程强行终止，这常会带来一些副作用，如数据丢失或者终端无法恢复到正常状态。发送信号时必须小心，只有在万不得已时，才用kill信号(9)，因为进程不能首先捕获它。
要撤销所有的后台作业，可以输入kill 0。因为有些在后台运行的命令会启动多个进程，跟踪并找到所有要杀掉的进程的PID是件很麻烦的事。这时，使用kill 0来终止所有由当前shell启动的进程，是个有效的方法。

6)只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。	
下面是常用的信号：
HUP     1    终端断线
INT     2    中断（同 Ctrl + C）
QUIT    3    退出（同 Ctrl + \）
TERM   15    终止
KILL    9    强制终止
CONT   18    继续（与STOP相反， fg/bg命令）
STOP   19    暂停（同 Ctrl + Z）