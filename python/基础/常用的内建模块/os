一、 os.walk
1. os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])
用于通过在目录树中游走输出在目录中的文件名，向上或者向下。

<1>参数
top 	-- 根目录下的每一个文件夹(包含它自己), 产生3-元组 (dirpath, dirnames, filenames)(文件夹路径, 文件夹名字, 文件名)
topdown -- 可选，为True或者没有指定, 一个目录的的3-元组将比它的任何子文件夹的3-元组先产生 (目录自上而下)。
                 如果topdown为 False, 一个目录的3-元组将比它的任何子文件夹的3-元组后产生 (目录自下而上)。
onerror -- 可选，是一个函数; 它调用时有一个参数, 一个OSError实例。报告这错误后，继续walk,或者抛出exception终止walk。
followlinks -- 设置为 true，则通过软链接访问目录。

二、os.path
1. os.path.join(a, *p)			
连接两个或多个路径component，根据需要插入'/'。如果某个路径component是绝对路径，那么所有之前的路径component将会被丢弃。
最后一个component为空将会导致路径以分隔符结束。

2. os.path.getsize(filename)	//返回文件的大小，reported by os.stat()

3. os.path.getmtime(filename)	//返回文件最近修改时间，reported by os.stat()

4. os.path.basename(p)			//返回路径的最终部分
>>> os.path.basename('/var/app_data/ddei/postfix/deferred/2/271EB180D75')
'271EB180D75'