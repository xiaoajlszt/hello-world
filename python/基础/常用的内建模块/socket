1. UDP也可以使用connect
https://www.cnblogs.com/jingzhishen/p/5545787.html

UDP是一个无连接的协议，因此socket函数connect()似乎对UDP是没有意义的，然而事实不是这样。它可以用来指定本地端口和本地地址，来建立虚拟连接。

一个socket接口有几个属性，其中包括协议，本地地址/端口，目的地址/端口。 
对于UDP来说：
    socket()函数建立一个插口；
    bind()函数指明了本地地址/端口(包括ADDR_ANY, 通配所有本地网络接口)；
    connect()可以用来指明目的地址/端口；

<1>    
一般来说，UDP客户端在建立了插口后会直接用sendto()函数发送数据，需要在sendto()函数的参数里指明目的地址/端口。
如果一个UDP客户端在建立了插口后首先用connect()函数指明了目的地址/端口，然后也可以用send函数发送数据，因为此时send函数已经知道对方地址/端口，用getsockname()也可以得到这个信息。

UDP客户端在建立了插口后会直接用sendto()函数发送数据，还隐含了一个操作，那就是在发送数据之前，UDP会首先为该插口选择一个独立的UDP端口(在1024—5000之间)，将该插口置为已绑定状态。
如果一个UDP客户端建立插口后首先用bind()函数指明了本地地址/端口，也是可以的，这样可以强迫UDP使用指定的端口发送数据。(事实上，UDP无所谓服务器和客户端，这里的界限已经模糊了。)

<2>  
UDP服务器也可以使用connect()，如上面所述，connect()可以用来指明目的地址/端口；这将导致服务器只接受特定一个主机的请求。
方法一：
    socket()——>sendto()或recvfrom()
方法二：
    socket()——>connect()——>send或recv()