一、time模块
http://blog.csdn.net/u013297909/article/details/49662307

import time

1. time.time()
Return the current time in seconds since the Epoch. Fractions of a second may be present if the system clock provides them.

>>> time.time()
1515514594.32

2. time.localtime([seconds]) -> (tm_year,tm_mon,tm_mday,tm_hour,tm_min,tm_sec,tm_wday,tm_yday,tm_isdst)
Convert seconds since the Epoch to a time tuple expressing local time. When 'seconds' is not passed in, convert the current time instead.

>>> time.localtime()
time.struct_time(tm_year=2018, tm_mon=1, tm_mday=10, tm_hour=0, tm_min=17, tm_sec=6, tm_wday=2, tm_yday=10, tm_isdst=0)

struct_time：
 |	tm_hour
 |      hours, range [0, 23]
 |
 |  tm_isdst
 |      1 if summer time is in effect, 0 if not, and -1 if unknown
 |
 |  tm_mday
 |      day of month, range [1, 31]
 |
 |  tm_min
 |      minutes, range [0, 59]
 |
 |  tm_mon
 |      month of year, range [1, 12]
 |
 |  tm_sec
 |      seconds, range [0, 61])
 |
 |  tm_wday
 |      day of week, range [0, 6], Monday is 0
 |
 |  tm_yday
 |      day of year, range [1, 366]
 |
 |  tm_year
 |      year, for example, 1993


3. time.strftime()
strftime(format[, tuple]) -> string

Convert a time tuple to a string according to a format specification. See the library reference manual for formatting codes. 
When the time tuple is not present, current time as returned by localtime() is used.
 
<1> 日期格式化符号
%y 两位数的年份表示（00-99）
%Y 四位数的年份表示（000-9999）
%m 月份（01-12）
%d 月内中的一天（0-31）
%H 24小时制小时数（0-23）
%I 12小时制小时数（01-12） 
%M 分钟数（00=59）
%S 秒（00-59）

%a 本地简化星期名称
%A 本地完整星期名称
%b 本地简化的月份名称
%B 本地完整的月份名称
%c 本地相应的日期表示和时间表示
%j 年内的一天（001-366）
%p 本地A.M.或P.M.的等价符
%U 一年中的星期数（00-53）星期天为星期的开始
%w 星期（0-6），星期天为星期的开始
%W 一年中的星期数（00-53）星期一为星期的开始
%x 本地相应的日期表示
%X 本地相应的时间表示
%Z 当前时区的名称
%% %号本身

<2> eg 
>>> time.strftime('%b %d %H:%M:%S')
'Jan 10 00:31:20'

>>> time.strftime('%b %d %H:%M:%S+%Z')
'Jan 09 00:04:55+CST'


二、datatime模块
http://blog.csdn.net/shomy_liu/article/details/44141483

1. datatime类
<1>
>>> datetime.datetime.now()	//本地时间，返回值为datetime类型
datetime.datetime(2018, 1, 9, 0, 7, 18, 467360)		年\月\日\时\分\秒\毫秒
>>> datetime.datetime.utcnow()  //utc时间
datetime.datetime(2018, 1, 8, 16, 7, 19, 467360)    年\月\日\时\分\秒\毫秒

<2> dt = datetime.datetime.now()
dt.strftime('') //datetime.datetime.strftime('')

%a	星期的英文单词的缩写：如星期一， 则返回 Mon
%A	星期的英文单词的全拼：如星期一，返回 Monday
%b	月份的英文单词的缩写：如一月， 则返回 Jan
%B	月份的引文单词的缩写：如一月， 则返回 January
%c	返回datetime的字符串表示，如03/08/15 23:01:26
%d	返回的是当前时间是当前月的第几天
%f	微秒的表示： 范围: [0,999999]
%H	以24小时制表示当前小时
%I	以12小时制表示当前小时
%j	返回 当天是当年的第几天 范围[001,366]
%m	返回月份 范围[0,12]
%M	返回分钟数 范围 [0,59]
%P	返回是上午还是下午–AM or PM
%S	返回秒数 范围 [0,61]。。。手册说明的
%U	返回当周是当年的第几周 以周日为第一天
%W	返回当周是当年的第几周 以周一为第一天
%w	当天在当周的天数，范围为[0, 6]，6表示星期天
%x	日期的字符串表示 ：03/08/15
%X	时间的字符串表示 ：23:22:08
%y	两个数字表示的年份 15
%Y	四个数字表示的年份 2015
%z	与utc时间的间隔 （如果是本地时间，返回空字符串）
%Z	时区名称（如果是本地时间，返回空字符串）


