1. 内存编码
<1>2.X		ASCII
<2>3.X		Unicode

2. print

3. 除法
<1>2.X
1) /	
>>> 10 / 3
3
整数除法永远是整数，即使除不尽。

2) 要做精确的除法，只需把其中一个整数换成浮点数做除法就可以：
>>> 10.0 / 3
3.3333333333333335

3) %
与3.x中相同

<2>3.X
有两种除法
1) /	结果是浮点数，即使两个整数恰好整除，结果也是浮点数
>>> 10 / 3
3.3333333333333335

2) //	又叫地板除，两个整数的除法仍然是整数
>>> 10 // 3
3
整数的地板除//结果永远是整数，即使除不尽。

3) %
因为//除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数：
>>> 10 % 3
1
无论整数做//除法还是取余数，结果永远是整数，所以，整数运算结果永远是精确的。
