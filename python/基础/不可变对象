一、基本介绍
1、字符串、整数是不可变对象，list是可变对象。
不可变（immutable）：int、字符串string、float、数值型number、元组tuple
可变（mutable）：字典型dictionary、列表型list

2、对于可变对象进行操作，内部内容是会变化的：
>>> a = ['c', 'b', 'a']
>>> a.sort()
>>> a
['a', 'b', 'c']

3、对于不可变对象进行操作，内部内容是不会变化的：
>>> s="abc"
>>> s.replace('a','A')
'Abc'
>>> s
'abc'

解释：
<1>当我们调用a.replace('a', 'A')时，实际上调用方法replace是作用在字符串对象'abc'上的，而这个方法虽然名字叫replace，但却没有改变字符串'abc'的内容。
相反，replace方法创建了一个新字符串'Abc'并返回，如果我们用变量b指向该新字符串，就容易理解了，变量a仍指向原有的字符串'abc'，但变量b却指向新字符串'Abc'了。

<2>所以，对于不变对象来说，调用对象自身的任意方法，也不会改变该对象自身的内容。
相反，这些方法会创建新的对象并返回，这样，就保证了不可变对象本身永远是不可变的。

不变对象一旦创建，对象内部的数据就不能修改，这样就减少了由于修改数据导致的错误。
此外，由于对象不变，多任务环境下同时读取对象不需要加锁，同时读一点问题都没有。
我们在编写程序时，如果可以设计一个不变对象，那就尽量设计成不变对象。

4、使用key-value存储结构的dict在Python中非常有用，选择不可变对象作为key很重要，最常用的key是字符串。

5、函数的默认参数必须指向不可变的对象。







