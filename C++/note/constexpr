2.4.4 constexpr和常量表达式
1. 常量表达式是指不会改变并且在编译过程中就能得到计算结果的表达式。
<1>字面值属于常量表达式。
<2>用常量表达式初始化的const对象也是常量表达式。

eg:
const int max_files = 20; //max_files是常量表达式
const int limit = max_files + 1; //limit是常量表达式
int staff_size = 27;	//staff_size不是常量表达式，它的数据类型只是普通int
const int sz = get_size(); //sz不是常量表达式，尽管sz本身是一个常量，但它的具体直到运行时才能获取到

2. constexpr变量
<1>C++11新标准规定，允许将变量声明为constexpr类型以便由编译器来验证变量的值是否是一个常量表达式。
声明为constexpr的变量一定是一个常量，而且必须用常量表达式初始化。
eg：
constexpr int mf = 20; //正确
constexpr int sz = size();	//只有当size是一个constexpr函数时，才是一条正确的声明语句
//尽管不能使用普通函数作为constexpr变量的初始值，但新标准允许定义一种特殊的constexpr函数，这种函数应该足够简单，编译时就可以计算器结果，这样就能用constexpr函数去初始化constexpr变量了。

<2>一般来说，如果认定变量是一个常量表达式，那就把它声明称constexpr类型。

3. 字面值类型


4. 指针和constexpr