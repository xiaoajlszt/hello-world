一、常量对象，以及常量对象的引用或指针都只能调用常量成员函数。
1、常量对象
<1>定义：可以用const关键字来指定对象是不可修改的。eg：const Time noon(12,0,0); //声明一个Time类的常量对象noon。
<2>常量对象不允许调用普通成员函数，只能调用常量成员函数。

2、常量成员函数(const成员函数)
<1>eg： std::string isbn() const {return this->bookNo;}  //常量成员函数不能改变调用它对象的内容，isbn可以读取调用它对象的数据成员，但不能写入新值。
const的作用是修改隐式this指针的类型。也即声明为const Sales_data *const
<2>默认情况下(普通成员函数)this指针的类型是指向类类型非常量版本的常量指针，即Sales_data *const。
默认情况下，不能把this绑定到一个常量对象上。也即不能在一个常量对象上调用普通成员函数。

<3>常量成员函数初始化必须使用初始化列表
eg：Increment::Increment(int c,int i) : count(c),increment(i);{}

3、对一般情况下，通常修改对象的构造函数和析构函数而言，它们不允许被声明成const。
<1>尽管构造函数必须是非常量成员函数，但它仍然可用于初始化常量对象。