一、自动资源释放
1、用类管理资源分配
通过定义一个类来封装资源的分配和释放，可以保证正确释放资源。这一技术称为“资源分配即初始化”(RAII)。
设计资源管理类，以便构造函数分配资源、析构函数释放资源。
//使用这个类时自动释放资源，如果函数正常终止，就在类对象超出作用域时释放资源；如果函数异常退出，编译器就会运行类的析构函数作为异常处理过程的一部分。

2、auto_ptr类
<1>标准库的auto_ptr类就是“资源分配即初始化”的例子，它接受一个类型形参的模板，为动态分配的对象提供异常安全。定义在头文件memory中。
<2>auto_ptr对象只能保存一个指向对象的指针，并且不能用于指向动态分配的数组，使用auto_ptr对象指向动态分配的数组会导致未定义的运行时行为。

1)为异常安全的内存分配使用auto_ptr
int *ip=new int(42); 
...				===>		auto_ptr<int> ap(new int(42));
delete ip;