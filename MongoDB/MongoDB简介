MongoDB是一种较新的数据库，它没有表、模式(Schema)、SQL或行的概念。它没有事务、ACID兼容性、连接、外键或其他许多容易在凌晨引起问题的特性。
<1>RDBMS是高度结构化的，它包含了多个文件(表)用于存储不同的数据，而MongoDB在单个文档中存储所有的数据。


1.1 了解MongoDB哲学
一、使用正确的工具处理正确的工作
1、MongoDB团队决定不会创建一个另一个试图为所有人做所有事情的数据库，而是创建一个只用于处理文档的数据库(而不是行)，并且它的速度要快，
还要具有强大的扩展性和易用性。

2、MongoDB设计背后的另一个关键概念是：数据库应该一直具有多个副本。如果单个数据库实例出现问题，那么可以轻松地通过另一个服务器恢复到正常状态。
<1>因为MongoDB的目标是尽可能地快，所以它采取了一些捷径，导致它难以从系统崩溃中恢复。
开发者认为最严重的系统崩溃可能就是从服务中移除一台计算机，这意味着即使数据库完全恢复也无法正常使用。

3、使用MongoDB，不必担心如何将数据压缩到一张表中，只需要将数据组合在一起，然后将数据传递给MongoDB。

二、天然缺少对事务的支持
1、MongoDB不支持事务，不包含事务的语义(用于保证数据一致性和存储的元素)，可以更轻松地实现水平扩展。
<1>通常在使用RDBMS时，如果需要提高性能就需要购买更大、更快的机器。这是一种垂直扩展的方式，但只能做到这种程度。
<2>如果使用水平扩展，就不需要使用一台大型机器，相反可以使用许多稍弱一些的小机器。这样的服务器集群非常有利于负载均衡网站。

2、MongoDB在同时使用至少两台存储数据的服务器(成为3节点集群)时可以提供持久性，这也是生产环境部署时推荐使用的基本配置。
MongoDB还支持“写顾虑(write concern)”的概念，即给定数量的节点确认写入成功，为数据安全存储提供了一个更强的保证。
<1>自MongoDB 1.8版本以来，单个服务器的持久性通过事务日志来保证。这个日志只追加，每100ms刷新到磁盘中。

三、JSON和MongoDB
1、JSON(JavaScript对象记号)不止是一种交换数据的方式，也是一种存储数据的良好方式。MongoDB如同JSON一样，该模型为数据库存储提供了丰富和高效的方式。
<1>JSON可高效地描述指定文档中的所有内容，所以不需要提前指定文档的结构。
<2>JSON是没有模式(Schema)的，因为文档可以单独更新，或者独立于其他文档进行修改。
<3>JSON通过将相关数据存储在同一位置，提供了出色的性能。

2、MongoDB并未使用JSON存储数据，而是使用一种称为BSON(二进制JSON)的开放数据格式。

3、JSON初始规范：
JSON允许在简单的、可读文本格式中展现复杂的数据结构，使用它通常比阅读和理解XML要简单得多。
如同XML一样，JSON被设计为一种在Web客户端和服务器之间交换数据的方式。
<1>历史上CSV(Comma-Separated Value，逗号分隔值)曾用于交换数据。使用换行符分隔不同的行，使用逗号分隔不同的字段。
CSV文件只适用于存储扁平且没有重复值(某行某个字段可能有多个值的情况)的数据。通常提供几个CSV文件，每个都包含不同的信息。
然后将这些文件结合到一起(通常使用RDBMS)组成完整的数据。

<2>XML不仅用于机器的读取(JSON用于人类的读取)，XML是高度可扩展的。
1)XML并非定义特定的数据格式，而是定义如何定义数据的格式。
如果需要交换复杂并高度结构化的数据，XML是非常有用的;不过对于简单数据交换，它通常会导致过多的工作。

<3>JSON提供了一个折中方案，与CSV不同，它可以存储结构化的内容;与XML不同，它的内容易于理解和使用。

<4>尽管手动编写JSON也很容易，但通常都是由软件自动生成的。例如Python中的JSON模块。

四、采用非关系方式
1、改进关系型数据库性能的方式：购买更大、更快的服务器。
<1>当遇到瓶颈时，唯一的选择就是扩展至两台服务器，但这是大多数关系型数据库的绊脚石。
1)PostgreSQL无法在两台服务器上同时运行单个数据库(两台服务器都能够读取或修改数据，通常被称为活跃/活跃集群)。
2)MySQL只有安装了特定的附件包，才能在两台服务器上同时运行单个数据库。

<2>为什么在两个数据库上部署活跃/活跃集群有困难？
因为在查询数据库时，数据库要找到所有相关的数据，并将它们关联到一起。RDBMS解决方案使用了许多巧妙的方式来提高性能，但它们都必须获得所有完整的数据。
因此，当有一半数据在另一台服务器上时，这种方式是无法工作的。

2、MongoDB不提供主/主复制，两台不同的服务器都可以接受写入请求。
MongoDB支持分片，允许将数据分散到多台机器中，每台机器都将负责更新数据集的不同部分。
分片集群的好处是可以添加额外的分片，来增加部署中的资源能力，而不必更改任何应用程序代码。(水平扩展)

五、选择性能还是特性

六、在任何地发均可运行数据库
MongoDB以C++编写。


1.2 将所有组合在一起
一、生成或创建键
1、文档代表了MongoDB中的一个存储单元。
<1>在RDBMS中存储单元将被称为行。
<2>在传统数据库的行是固定的;MongoDB中文档可由任意数目的键和值组成。

2、MongoDB要求每个文档必须有唯一标识符，称为_id。除非该字段指定某个值，否则MongoDB将自动创建唯一值。
<1>MongoDB是一个分布式数据库，所以其主要目标之一是消除对共享资源的依赖。
<2>我们更愿意使用数据库提供的默认键，它可以保证键是惟一的，并且是独立的。

二、使用键和值
1、键和值总是成对出现的。
<1>RDBMS中所有的字段必须有值，即使值是NULL;MongoDB不要求每个文档必须含有相同的字段，也不要求同名的字段有相同类型的值。
<2>如果MongoDB中不包含某个键值对，那它就被认为是不存在的。

三、实现集合
1、在MongoDB中集合就是一组类似元素的集合。
<1>是否应该将特定的文档存储在相同的集合中取决于应用的需求。

1.3 了解特性列表
一、WiredTiger
1、WiredTiger是MongoDB 3.2的默认存储引擎。
<1>WiredTiger存储引擎支持多个压缩率，默认启用索引和数据压缩。压缩级别默认可以在每个服务器上设置，也可以在每个集合(创建时)设置。
在存储数据时，较高的压缩级别会使用更多CPU，但可节省大量磁盘空间。

二、使用面向文档存储(BSON)
1、BSON更易于遍历，遍历索引页非常快。尽管比起JSON，它需要稍微多一些的硬盘空间。
2、很容易将BSON数据快速转换为编程语言的原生数据格式。如果以纯JSON方式存储数据，就需要添加一个较高级别的转换。

三、支持动态查询
1、MongoDB支持动态查询，可以运行查询而不需要提前做出计划。(类似于在RDBMS中运行SQL查询)
<1>传统的RDBMS中有静态数据和动态查询，这意味着数据的结构必须提前确定下来。
因为数据库提前知道数据的结构，所以它可以做出特定的假设和优化，从而使动态查询更快速。


































































